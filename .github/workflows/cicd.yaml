name: example-app-cicd

on:
  push:
    branches:
      - main
      - stg
      - dev
    tags: [ 'v*.*.*' ]
  pull_request:
    branches:
      - main
      - stg
      - dev

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Install dependencies
      run: |
        go version
        go get -u golang.org/x/lint/golint

    - name: Vet and Lint
      run: |
        go vet .
        golint .

    - name: Build
      run: go build .

    - name: Run testing
      run: cd test && go test -v -bench=.

  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.1.1
        with:
          cosign-release: 'v2.1.1'

      - name: Check cosign
        run: cosign version

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}

  # deploy:
  #   runs-on: ubuntu-latest

  #   # Only run this workflow when "build" workflow succeeds
  #   needs: [build]

  #   # Only run this workflow if it is main branch on push event
  #   if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3

  #   - id: 'auth'
  #     name: 'Authenticate to Google Cloud'
  #     uses: 'google-github-actions/auth@v1'
  #     with:
  #       workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
  #       service_account: 'my-service-account@my-project.iam.gserviceaccount.com'
  #   # ... further steps are automatically authenticated